const char FreeCADGuiInit[] ="# FreeCAD gui init module\n"
"# (c) 2003 Jürgen Riegel\n"
"#\n"
"# Gathering all the information to start FreeCAD\n"
"# This is the second one of three init scripts, the third one\n"
"# runs when the gui is up\n"
"\n"
"#***************************************************************************\n"
"#*   (c) Jürgen Riegel (juergen.riegel@web.de) 2002                        *\n"
"#*                                                                         *\n"
"#*   This file is part of the FreeCAD CAx development system.              *\n"
"#*                                                                         *\n"
"#*   This program is free software; you can redistribute it and/or modify  *\n"
"#*   it under the terms of the GNU General Public License (GPL)            *\n"
"#*   as published by the Free Software Foundation; either version 2 of     *\n"
"#*   the License, or (at your option) any later version.                   *\n"
"#*   for detail see the LICENCE text file.                                 *\n"
"#*                                                                         *\n"
"#*   FreeCAD is distributed in the hope that it will be useful,            *\n"
"#*   but WITHOUT ANY WARRANTY; without even the implied warranty of        *\n"
"#*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *\n"
"#*   GNU Library General Public License for more details.                  *\n"
"#*                                                                         *\n"
"#*   You should have received a copy of the GNU Library General Public     *\n"
"#*   License along with FreeCAD; if not, write to the Free Software        *\n"
"#*   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  *\n"
"#*   USA                                                                   *\n"
"#*                                                                         *\n"
"#*   Juergen Riegel 2002                                                   *\n"
"#***************************************************************************/\n"
"\n"
"\n"
"# imports the one and only\n"
"import FreeCAD, FreeCADGui\n"
"\n"
"# shortcuts\n"
"Gui = FreeCADGui\n"
"\n"
"# Important definitions\n"
"class Workbench:\n"
"	def Activate(self):\n"
"		Wrn(\"Init: \"+ str(self) + \": Workbench.Activate() not implemented!\")\n"
"	def GetClassName(self):\n"
"		Wrn(\"Init: \"+ str(self) + \": Workbench.GetClassName() not implemented!\")\n"
"	def GetIcon(self):\n"
"		# returns an icon for the workbench\n"
"		return [\"/* XPM */\\n\"\n"
"			\"static const char *FCIcon[]={\\n\"\n"
"			\"\\\"16 16 4 1\\\",\\n\"\n"
"			\"\\\". c None\\\",\\n\"\n"
"			\"\\\"# c #000000\\\",\\n\"\n"
"			\"\\\"a c #848284\\\",\\n\"\n"
"			\"\\\"b c #ff0000\\\",\\n\"\n"
"			\"\\\"........#.......\\\",\\n\"\n"
"			\"\\\".......##aaaaaa.\\\",\\n\"\n"
"			\"\\\"........#.....a.\\\",\\n\"\n"
"			\"\\\".#######......a.\\\",\\n\"\n"
"			\"\\\".##...........a.\\\",\\n\"\n"
"			\"\\\".##...bbbb....a.\\\",\\n\"\n"
"			\"\\\".##..bb..bb...a.\\\",\\n\"\n"
"			\"\\\".###bb#...b..###\\\",\\n\"\n"
"			\"\\\".##.bb........#.\\\",\\n\"\n"
"			\"\\\".##.bb..........\\\",\\n\"\n"
"			\"\\\".##.bb..........\\\",\\n\"\n"
"			\"\\\".##.bb..........\\\",\\n\"\n"
"			\"\\\".##.bb....b.....\\\",\\n\"\n"
"			\"\\\".....bb..bb.....\\\",\\n\"\n"
"			\"\\\"......bbbb......\\\",\\n\"\n"
"			\"\\\"................\\\"};\\n\"]\n"
"\n"
"\n"
"class StandardWorkbench ( Workbench ):\n"
"	\"Standard workbench object\"\n"
"	def Activate(self):\n"
"		# load the module\n"
"		Log (\'Mod : Loading FreeCADGui\')\n"
"	def GetClassName(self):\n"
"		return \"Gui::StdWorkbench\"\n"
"\n"
"def InitApplications():\n"
"	# Checking on FreeCAD Module path ++++++++++++++++++++++++++++++++++++++++++\n"
"	ModDir = FreeCAD.ConfigGet(\"HomePath\")+\'src/Mod\'\n"
"	#print FreeCAD.ConfigGet(\"HomePath\")\n"
"	if os.path.isdir(FreeCAD.ConfigGet(\"HomePath\")+\'Mod\'):\n"
"		ModDir = FreeCAD.ConfigGet(\"HomePath\")+\'Mod\'\n"
"	else:\n"
"		if os.path.isdir(FreeCAD.ConfigGet(\"HomePath\")+\'src\\\\Mod\'):\n"
"			ModDir = FreeCAD.ConfigGet(\"HomePath\")+\'src\\\\Mod\'\n"
"	# Searching modules dirs +++++++++++++++++++++++++++++++++++++++++++++++++++\n"
"	ModDirs = dircache.listdir(ModDir)\n"
"	#print ModDirs\n"
"	Log(\'Init:   Searching modules...\\n\')\n"
"	ModPar = App.ParamGet(\"System parameter:Modules\")\n"
"	for Dir in ModDirs:\n"
"		if ( (Dir != \'CVS\') & (Dir != \'__init__.py\')):\n"
"			Log(\'Init:      Initializing: \' + Dir + \'...\')\n"
"			InstallFile = os.path.join(os.path.join(ModDir,Dir),\"InitGui.py\")\n"
"			if ( os.path.exists(InstallFile) ):\n"
"				try:\n"
"					execfile(InstallFile)\n"
"				except Exception, inst:\n"
"					Err(\"During initialization the error \" + str(inst) + \" occurred in \" + InstallFile + \"\\n\")\n"
"				else:\n"
"					Log(\'Init:        done\\n\')\n"
"			else:\n"
"				Wrn(\"InitGui.py not found! \"+Dir+\" not initialized!\\n\")\n"
"\n"
"\n"
"Log (\'Init: starting Gui::FreeCADGuiInit.py\\n\')\n"
"\n"
"# init the gui\n"
"\n"
"# signal that the gui is up\n"
"App.GuiUp = 1\n"
"App.Gui = FreeCADGui\n"
"\n"
"Gui.AddWorkbenchHandler(\"<none>\",StandardWorkbench())\n"
"\n"
"# init modules\n"
"InitApplications()\n"
"\n"
"# set standard workbench (needed as fallback)\n"
"Gui.ActivateWorkbench(\"<none>\")\n"
"\n"
"# Register .py, .FCScript and .FCMacro\n"
"FreeCAD.EndingAdd(\"py\",\"FreeCADGui\")\n"
"FreeCAD.EndingAdd(\"iv\",\"FreeCADGui\")\n"
"FreeCAD.EndingAdd(\"wrl\",\"FreeCADGui\")\n"
"FreeCAD.EndingAdd(\"FCMacro\",\"FreeCADGui\")\n"
"FreeCAD.EndingAdd(\"FCScript\",\"FreeCADGui\")\n"
"\n"
"\n"
"Log (\'Init: Gui::FreeCADGuiInit.py done\\n\')\n"
;


